<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js" integrity="sha384-mkQ3/7FUtcGyoppY6bz/PORYoGqOl7/aSUMn2ymDOJcapfS6PHqxhRTMh1RR0Q6+" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
</head>
<body>
    <div>
        <h1>Longitude:</h1>
        <input type="text" id="lon" readonly>

        <h1>Latitude:</h1>
        <input type="text" id="lat" readonly>

    </div>
    <div id="map"></div>

    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js" integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
//         const socket = io();


//         var lon=document.getElementById("lon")
//         var lat=document.getElementById("lat")
//        socket.on("receive-location", ({ latitude, longitude }) => {
//        lat.value=latitude;
//       lon.value=longitude;
// });

    </script>
        <script>
            const socket = io();
    
            var lon = document.getElementById("lon");
            var lat = document.getElementById("lat");
    
            // Initialize the map
            var map = L.map('map').setView([0, 0], 2); // Default view
    
            // Add OpenStreetMap tiles
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: 'Bus Tracking'
            }).addTo(map);
    
            let currentMarker = null; // Store the current marker

socket.on("receive-location", ({ latitude, longitude }) => {
    lat.value = latitude;
    lon.value = longitude;

    // Remove the previous marker if it exists
    if (currentMarker) {
        map.removeLayer(currentMarker);
    }

    // Add a new marker
    currentMarker = L.marker([latitude, longitude]).addTo(map)
        .bindPopup(`Lat: ${latitude}, Lon: ${longitude}`)
        .openPopup();

    // Set the map view to the new location
    map.setView([latitude, longitude], 20);
});
        </script>
</body>
</html>